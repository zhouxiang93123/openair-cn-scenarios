#!/bin/bash
################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under 
# the Apache License, Version 2.0  (the "License"); you may not use this file
# except in compliance with the License.  
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################
# file s1_run_test_scenario
# brief
# author Lionel Gauthier
# company Eurecom
# email: lionel.gauthier@eurecom.fr
# 
# This script run the network scenario contained in the specified folder given in argument
################################
# include helper functions
################################
THIS_SCRIPT_PATH=$(dirname $(readlink -f $0))
source $THIS_SCRIPT_PATH/script_helper


function main()
{

  if [ "a$OPENAIRCN_DIR" == "a" ] ; then
    read -p "Please enter the path of the openair-cn source tree ? " prompt
    export OPENAIRCN_DIR=$prompt
  fi

  if [ "a$OPENAIRCN_DIR" = "a" ]; then 
    echo "OPENAIRCN_DIR does not refer to a valid dir: $OPENAIRCN_DIR"
  fi
 
  if [ ! -d "$OPENAIRCN_DIR" ]; then
    echo "OPENAIRCN_DIR does not refer to a valid dir: $OPENAIRCN_DIR"
  fi


  if [ ! -z "$1" ]; then
    if [ ! -d $1 ]; then
      echo_fatal "Error: Please provide a valid path to the desired test scenario dir" 
    fi
    cd $1
  fi
  
  $THIS_SCRIPT_PATH/s1_prepare_test_scenario .

  
  backuped_conf_file_path=/usr/local/etc/oai/epc.conf.backup_$(date +%F-%T)
  if [ -f "/usr/local/etc/oai/epc.conf" ] ; then
    $SUDO cp -pf /usr/local/etc/oai/epc.conf $backuped_conf_file_path
  fi
  
  if [ ! -f "./epc.conf.replay.in" ] ; then
      echo_fatal "Error: Did not found the required file (epc.conf.replay.in) for running the scenario in `pwd`" 
  else
    if [ ! -f "./epc.replay.conf" ] || [ "./epc.conf.replay.in" -nt "./epc.replay.conf" ]; then
      # backup file
      backuped_file_path=$OPENAIRCN_DIR/BUILD/EPC/epc.conf.in.backup_$(date +%F-%T)
      cp -pf $OPENAIRCN_DIR/BUILD/EPC/epc.conf.in $backuped_file_path
      cp ./epc.conf.replay.in $OPENAIRCN_DIR/BUILD/EPC/epc.conf.in
      cd $OPENAIRCN_DIR/SCRIPTS
      $SUDO rm -f /usr/local/etc/oai/epc.conf
      # may fail
      ./build_epc -C -l
      cd -
      cp /usr/local/etc/oai/epc.conf ./epc.replay.conf
      #restore
      cp -pf $backuped_file_path $OPENAIRCN_DIR/BUILD/EPC/epc.conf.in
      rm $backuped_file_path
    else
      $SUDO cp ./epc.replay.conf /usr/local/etc/oai/epc.conf 
    fi
    if [ ! -f "./epc.replay.conf" ] ; then
      echo_fatal "Error: Did not generate the required file epc.replay.conf for running the scenario in `pwd`" 
    fi
  fi
  
  
  if [ -f "./enb.replay.conf" ] && [ -f "./s1.xml" ] && [ -f "./epc.replay.conf" ] ; then
    # may be you want to speed up the run of the scenario if not optimized (capture with real UE)
    run_option=""
    if [ -f "./enb.replay.run_options.txt" ]; then
      run_options=$(< ./enb.replay.run_options.txt)
    fi
    
    # start EPC with default epc conf file
    if [ -f "./networking " ]; then 
      # do networking config
      $SUDO ./networking --on
      $OPENAIRCN_DIR/SCRIPTS/run_epc --daemon
    else
      $OPENAIRCN_DIR/SCRIPTS/run_epc --set-nw-interfaces --daemon
    fi
    sleep 4 # TODO better than that
    $OPENAIRCN_DIR/SCRIPTS/run_hss  --import-db ./hss_db.sql  --daemon
    sleep 4 # TODO better than that
    
    # run XML scenario file
    echo_success "Running test `pwd`"
    test_epc --run --set-nw-interfaces --test-dir . --enb-config-file enb.replay.conf --scenario-file s1.xml $run_options
    
    $OPENAIRCN_DIR/SCRIPTS/run_epc --kill
    $OPENAIRCN_DIR/SCRIPTS/run_hss --kill
    
    # undo networking config
    if [ -f "./networking " ]; then 
      $SUDO ./networking --off
    fi
  else
    echo_fatal "Error: Did not found the required files (enb.replay.conf, s1.xml) for running the scenario in `pwd`" 
  fi
  
  # restore
  if [ -f $backuped_conf_file_path ] ; then
    $SUDO cp -pf $backuped_conf_file_path /usr/local/etc/oai/epc.conf 
  fi
  
}

main "$@"
