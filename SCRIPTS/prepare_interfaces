#!/bin/bash
################################################################################
# Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The OpenAirInterface Software Alliance licenses this file to You under 
# the Apache License, Version 2.0  (the "License"); you may not use this file
# except in compliance with the License.  
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
# For more information about the OpenAirInterface (OAI) Software Alliance:
#      contact@openairinterface.org
################################################################################
# file prepare_interfaces
# brief
# author Lionel Gauthier
# company Eurecom
# email: lionel.gauthier@eurecom.fr
# 

export THIS_SCRIPT_PATH=$(dirname $(readlink -f $0))
source $THIS_SCRIPT_PATH/script_helper


declare    g_mme_default_config_file="./mme.replay.conf"
declare    g_spgw_default_config_file="./spgw.replay.conf"
declare    g_enb_default_config_file="./enb.replay.conf"

function help()
{
  echo_error "\033[1m \033[0m"
  echo_error "Usage: test_epc [OPTION]..."
  echo_error "Description:"
  echo_error "Utility for building or/and running a EPC test case."
  echo_error " "
  echo_error "Options:"
  echo_error "Mandatory arguments to long options are mandatory for short options too."
  echo_error "  -h, --help                               Print this help."
  echo_error "  -m, --mme-config-file      file_abs_path Config file to be used by MME if you don't want to use the default one: $g_mme_default_config_file"
  echo_error "  -n, --enb-config-file      file_abs_path Config file to be used by eNB if you don't want to use the default one: $g_enb_default_config_file"
  echo_error "  -o, --off                                Clear network config."
  echo_error "  -O, --on                                 Set network config that can be found in EPC and eNB config file."
  echo_error "  -s, --spgw-config-file     file_abs_path Config file to be used by SPGW if you don't want to use the default one: $g_spgw_default_config_file"
  echo_error " "
}

function main()
{
  local -i on=0
  local -i off=0
  local -i run_gdb=0
  local    mme_config_file=$g_mme_default_config_file
  local    spgw_config_file=$g_spgw_default_config_file
  local    enb_config_file=$g_enb_default_config_file

  until [ -z "$1" ]
    do
    case "$1" in
      -h | --help)
        help
        exit 0
        ;;
      -n | --enb-config-file)
        enb_config_file=$2
        echo "setting eNB config file to: $enb_config_file"
        shift 2;
        ;;
      -o | --off)
        off=1
        shift;
        ;;
      -O | --on)
        on=1
        shift;
        ;;
      -m | --mme-config-file)
        mme_config_file=$2
        echo "setting MME config file to: $mme_config_file"
        shift 2;
        ;;
      -s | --spgw-config-file)
        spgw_config_file=$2
        echo "setting SPGW config file to: $spgw_config_file"
        shift 2;
        ;;
      *)   
        echo "Unknown option $1"
        help
        exit 1
        ;;
    esac
  done
  
  if [ $on -eq $off ]; then
    echo_fatal "Please specify a coherent action requested, --on or --off"
  fi
  #####################################
  # GET MME NETWORK CONFIG
  #####################################
  value="`cat $mme_config_file | cut -d "#" -f1 | grep 'ADDRESS\|INTERFACE' | tr -d " " | grep "="`"
  eval $value

  # check all var names are correct
  list_var_name="\
      MME_INTERFACE_NAME_FOR_S1_MME         MME_IPV4_ADDRESS_FOR_S1_MME \
      MME_INTERFACE_NAME_FOR_S11_MME        MME_IPV4_ADDRESS_FOR_S11_MME"
  for var_name in $list_var_name
  do
    if [ -n "$${var_name}" ]; then
      echo_success "Found ${var_name} = ${!var_name}"
    else
      echo_fatal "${var_name} does does not exist in your config file $1"
    fi
  done
  
  #####################################
  # GET SPGW NETWORK CONFIG
  #####################################
  value="`cat $spgw_config_file | cut -d "#" -f1 | grep 'ADDRESS\|INTERFACE' | tr -d " " | grep "="`"
  eval $value
  
  # check all var names are correct
  list_var_name="\
      SGW_INTERFACE_NAME_FOR_S11            SGW_IPV4_ADDRESS_FOR_S11 \
      SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP  SGW_IPV4_ADDRESS_FOR_S1U_S12_S4_UP \
      SGW_INTERFACE_NAME_FOR_S5_S8_UP       SGW_IPV4_ADDRESS_FOR_S5_S8_UP \
      PGW_INTERFACE_NAME_FOR_S5_S8          PGW_IPV4_ADDRESS_FOR_S5_S8 \
      PGW_INTERFACE_NAME_FOR_SGI            PGW_IPV4_ADDRESS_FOR_SGI"
  for var_name in $list_var_name
  do
    if [ -n "$${var_name}" ]; then
      echo_success "Found ${var_name} = ${!var_name}"
    else
      echo_fatal "${var_name} does does not exist in your config file $1"
    fi
  done

  #####################################
  # GET eNB NETWORK CONFIG
  #####################################
  value="`cat $enb_config_file | cut -d "#" -f1 | grep 'ADDRESS\|INTERFACE' | tr -d " " | grep "="`"
  eval $value

  # check all var names are correct
  list_var_name="\
      ENB_INTERFACE_NAME_FOR_S1_MME         ENB_IPV4_ADDRESS_FOR_S1_MME \
      ENB_INTERFACE_NAME_FOR_S1U            ENB_IPV4_ADDRESS_FOR_S1U "
  for var_name in $list_var_name
  do
    if [ -n "$${var_name}" ]; then
      echo_success "Found ${var_name} = ${!var_name}"
    else
      echo_fatal "${var_name} does does not exist in your config file $1"
    fi
  done

  if [ $off -eq 1 ]; then
    # we assume all interfaces are virtual interfaces
    $SUDO ip netns exec enb ifconfig   $ENB_INTERFACE_NAME_FOR_S1_MME  down
    #$SUDO ip netns exec enb ifconfig   $ENB_INTERFACE_NAME_FOR_S1U    down
    $SUDO ifconfig   $SGW_INTERFACE_NAME_FOR_S11                       down
    #$SUDO ifconfig   $SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP            down
    #$SUDO ifconfig   $SGW_INTERFACE_NAME_FOR_S5_S8_UP                 down
    #$SUDO ifconfig   $PGW_INTERFACE_NAME_FOR_S5_S8                    down
    #$SUDO ifconfig   $PGW_INTERFACE_NAME_FOR_SGI                      down
    $SUDO ifconfig   $MME_INTERFACE_NAME_FOR_S1_MME                    down
    $SUDO ifconfig   $MME_INTERFACE_NAME_FOR_S11_MME                   down
    $SUDO ifconfig   $MME_S6A_INTERFACE_NAME                           down
    $SUDO ip netns exec hss ifconfig   $HSS_S6A_INTERFACE_NAME         down
  else
    # configure interfaces
    # we assume all interfaces are virtual interfaces
    $SUDO ip netns add hss
    $SUDO ip netns add enb
    
    $SUDO ip link add $ENB_INTERFACE_NAME_FOR_S1_MME type veth peer name $MME_INTERFACE_NAME_FOR_S1_MME
    $SUDO ip link add $ENB_INTERFACE_NAME_FOR_S1U    type veth peer name $SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP
    $SUDO ip link add $SGW_INTERFACE_NAME_FOR_S11    type veth peer name $MME_INTERFACE_NAME_FOR_S11_MME
    $SUDO ip link add $HSS_S6A_INTERFACE_NAME        type veth peer name $MME_S6A_INTERFACE_NAME
    
    $SUDO ip link set $ENB_INTERFACE_NAME_FOR_S1_MME  netns enb
    $SUDO ip link set $ENB_INTERFACE_NAME_FOR_S1U     netns enb
    $SUDO ip link set $HSS_S6A_INTERFACE_NAME         netns hss

    $SUDO ip netns exec hss ip link set dev lo up
    $SUDO ip netns exec hss ifconfig   $HSS_S6A_INTERFACE_NAME          $HSS_S6A_IP           up
    $SUDO ip netns exec enb ip link set dev lo up
    $SUDO ip netns exec enb ifconfig   $ENB_INTERFACE_NAME_FOR_S1_MME   $ENB_IPV4_ADDRESS_FOR_S1_MME           up
    $SUDO ip netns exec enb ifconfig   $ENB_INTERFACE_NAME_FOR_S1U      $ENB_IPV4_ADDRESS_FOR_S1U              up
    $SUDO ifconfig   $SGW_INTERFACE_NAME_FOR_S11            $SGW_IPV4_ADDRESS_FOR_S11              up
    $SUDO ifconfig   $SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP  $SGW_IPV4_ADDRESS_FOR_S1U_S12_S4_UP    up
    #$SUDO ifconfig   $SGW_INTERFACE_NAME_FOR_S5_S8_UP       $SGW_IPV4_ADDRESS_FOR_S5_S8_UP         up
    #$SUDO ifconfig   $PGW_INTERFACE_NAME_FOR_S5_S8          $PGW_IPV4_ADDRESS_FOR_S5_S8            up
    #$SUDO ifconfig   $PGW_INTERFACE_NAME_FOR_SGI            $PGW_IPV4_ADDRESS_FOR_SGI              up
    $SUDO ifconfig   $MME_INTERFACE_NAME_FOR_S1_MME         $MME_IPV4_ADDRESS_FOR_S1_MME           up
    $SUDO ifconfig   $MME_INTERFACE_NAME_FOR_S11_MME        $MME_IPV4_ADDRESS_FOR_S11_MME          up
    $SUDO ifconfig   $MME_S6A_INTERFACE_NAME                $MME_S6A_IP/24                         up
  fi
  
}


main "$@"

